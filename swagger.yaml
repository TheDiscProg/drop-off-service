openapi: 3.0.0
info:
  description: "EDA/DAPEX Drop-Off API"
  version: 1.0.0
  title: DAPEX Drop-Off API
tags:
  - name: healthcheck
    description: Healthcheck API
  - name: dropoff
    description: Drop-Off Service endpoing

paths:
  /:
    get:
      tags:
        - healthcheck
      x-jvm-package: healthcheck
      summary: healthcheck
      description: healthcheck endpoint
      operationId: healthcheck
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthResponse"
  /drop-off:
    post:
      tags:
        - dropOff
      x-jvm-package: dropoff
      summary: Drop off endpoint
      description: Drop off endpoint for all requests
      operationId: dropOffRequest
      requestBody:
        description: a DAPEX message
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DapexMessageRequest'
      responses:
        '204':
          description: Ok
        '400':
          description: bad request
        '503':
          description: there is a problem handling this request - something is not available


components:
  schemas:
    HealthResponse:
      type: object
      properties:
        serviceStatus:
          type: string
          enum: [ OK, BROKEN ]
      required:
        - serviceStatus

    DapexMessageRequest:
      type: object
      properties:
        endpoint:
          $ref: '#/components/schemas/EndPoint'
        client:
          $ref: '#/components/schemas/Client'
        originator:
          $ref: '#/components/schemas/Orignator'
        criteria:
          type: array
          items:
            $ref: '#/components/schemas/Criterion'
        update:
          type: array
          items:
            $ref: '#/components/schemas/Update'
        insert:
          type: array
          items:
            $ref: '#/components/schemas/Insert'
        process:
          type: array
          items:
            $ref: '#/components/schemas/Process'
        response:
          $ref: '#/components/schemas/DapexResponse'
      required:
        - endpoint
        - client
        - originator
        - criteria
        - update
        - insert
        - process

    EndPoint:
      type: object
      properties:
        resource:
          type: string
          description: the endpoint resource
        method:
          type: string
          description: the call type
      required:
        - resource
        - method

    Client:
      type: object
      properties:
        clientId:
          type: string
          description: the client identifying string
        requestId:
          type: string
          description: the request id
        sourceEndpoint:
          type: string
          description: the client's endpoint from with the call was made
        authorisation:
          type: string
          description: the authentication/authorisation token
      required:
        - clientId
        - requestId
        - sourceEndpoint
        - authorisation

    Orignator:
      type: object
      properties:
        clientId:
          type: string
          description: the client ID of the originator that started the COE
        requestId:
          type: string
          description: the request Id of the originator that started the COE
        sourceEndpoint:
          type: string
          description: the endpoint of the originator that started this COE
      required:
        - clientId
        - requestId
        - sourceEndpoint

    Criterion:
      type: object
      properties:
        field:
          type: string
          description: the name of the field
        value:
          type: string
          description: the value to evaluate
        operator:
          type: string
          description: the operation for the evaluation
      required:
        - field
        - value
        - operator

    Update:
      type: object
      properties:
        field:
          type: string
          description: the name of the field to update
        oldValue:
          type: string
          description: the old value
        newValue:
          type: string
          description: the new value
      required:
        - field
        - newValue

    Insert:
      type: object
      properties:
        field:
          type: string
          description: the name of the field
        value:
          type: string
          description: the value to set
      required:
        - field
        - value

    Process:
      type: object
      properties:
        field:
          type: string
          description: the name of the field
        value:
          type: string
          description: the value to use
      required:
        - field
        - value

    DapexResponse:
      type: object
      properties:
        status:
          type: string
          description: the status of the event
        message:
          type: string
          description: the message to send back
        data:
          type: array
          items:
            $ref: '#/components/schemas/FieldValuePair'
      required:
        - status
        - message
        - data

    FieldValuePair:
      type: object
      properties:
        field:
          type: string
          description: the name of the field
        value:
          type: string
          description: the string representation of the value
      required:
        - field
        - value
